{"ast":null,"code":"const initialState = {\n  currentUser: null,\n  // Store the current user data\n  register_error: null,\n  // Store any registration errors\n  get_user_error: null,\n  loading: false\n};\nexport const userReducer = (state = initialState, action) => {\n  console.log(`Action: ${action.type}`, action); // Log action type and payload\n  console.log(\"State before action:\", state);\n  let newState = {\n    ...state\n  }; // Always create a copy of the state\n\n  switch (action.type) {\n    case 'REGISTER_NEW_USER':\n      newState.currentUser = action.payload; // Update the user in the state\n      newState.register_error = null; // Reset any previous registration errors on success\n      break;\n    case 'REGISTER_NEW_USER_ERROR':\n      newState.register_error = action.register_error; // Store the error in the state\n      break;\n    case 'GET_USER':\n      newState.currentUser = action.payload; // Update the user in the state\n      newState.get_user_error = null; // Reset any previous registration errors on success\n      break;\n    case 'GET_USER_ERROR':\n      newState.get_user_error = action.get_user_error; // Store the error in the state\n      break;\n    case 'GET_USER_LOADING':\n      return {\n        ...state,\n        loading: action.loading\n      };\n    default:\n      return state;\n    // If action type doesn't match, return the current state\n  }\n  console.log(\"State after action:\", newState); // Log the updated state\n  return newState;\n};","map":{"version":3,"names":["initialState","currentUser","register_error","get_user_error","loading","userReducer","state","action","console","log","type","newState","payload"],"sources":["C:/Users/EugenDesktop/Desktop/course work/web-store/src/redux/reducer/UserReducer.js"],"sourcesContent":["const initialState = {\r\n    currentUser: null,          // Store the current user data\r\n    register_error: null,       // Store any registration errors\r\n    get_user_error: null,\r\n    loading: false  \r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    console.log(`Action: ${action.type}`, action); // Log action type and payload\r\n    console.log(\"State before action:\", state);\r\n\r\n    let newState = { ...state }; // Always create a copy of the state\r\n\r\n    switch (action.type) {\r\n        case 'REGISTER_NEW_USER':\r\n            newState.currentUser = action.payload; // Update the user in the state\r\n            newState.register_error = null; // Reset any previous registration errors on success\r\n            break;\r\n        case 'REGISTER_NEW_USER_ERROR':\r\n            newState.register_error = action.register_error; // Store the error in the state\r\n            break;\r\n        case 'GET_USER':\r\n            newState.currentUser = action.payload; // Update the user in the state\r\n            newState.get_user_error = null; // Reset any previous registration errors on success\r\n            break;\r\n        case 'GET_USER_ERROR':\r\n            newState.get_user_error = action.get_user_error; // Store the error in the state\r\n            break;\r\n        case 'GET_USER_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n            };\r\n        default:\r\n            return state; // If action type doesn't match, return the current state\r\n    }\r\n\r\n    console.log(\"State after action:\", newState); // Log the updated state\r\n    return newState;\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,WAAW,EAAE,IAAI;EAAW;EAC5BC,cAAc,EAAE,IAAI;EAAQ;EAC5BC,cAAc,EAAE,IAAI;EACpBC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EACzDC,OAAO,CAACC,GAAG,CAAC,WAAWF,MAAM,CAACG,IAAI,EAAE,EAAEH,MAAM,CAAC,CAAC,CAAC;EAC/CC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,KAAK,CAAC;EAE1C,IAAIK,QAAQ,GAAG;IAAE,GAAGL;EAAM,CAAC,CAAC,CAAC;;EAE7B,QAAQC,MAAM,CAACG,IAAI;IACf,KAAK,mBAAmB;MACpBC,QAAQ,CAACV,WAAW,GAAGM,MAAM,CAACK,OAAO,CAAC,CAAC;MACvCD,QAAQ,CAACT,cAAc,GAAG,IAAI,CAAC,CAAC;MAChC;IACJ,KAAK,yBAAyB;MAC1BS,QAAQ,CAACT,cAAc,GAAGK,MAAM,CAACL,cAAc,CAAC,CAAC;MACjD;IACJ,KAAK,UAAU;MACXS,QAAQ,CAACV,WAAW,GAAGM,MAAM,CAACK,OAAO,CAAC,CAAC;MACvCD,QAAQ,CAACR,cAAc,GAAG,IAAI,CAAC,CAAC;MAChC;IACJ,KAAK,gBAAgB;MACjBQ,QAAQ,CAACR,cAAc,GAAGI,MAAM,CAACJ,cAAc,CAAC,CAAC;MACjD;IACJ,KAAK,kBAAkB;MACnB,OAAO;QACH,GAAGG,KAAK;QACRF,OAAO,EAAEG,MAAM,CAACH;MACpB,CAAC;IACL;MACI,OAAOE,KAAK;IAAE;EACtB;EAEAE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEE,QAAQ,CAAC,CAAC,CAAC;EAC9C,OAAOA,QAAQ;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}